--------------------- Fix DevExpress v56 ---------------------------------
1)************************************************************************
Проблема:
При установке в VerticalGrid свойства GoToNextCellOnEnter при нажатии Enter 
на последнем Row происходит смена фокуса на другой контрол (выход из грида)

Причина:
  В версии 56 переписали медод  TcxCustomControlController.KeyDown в модуле cxInplaceContainer.
  Думаю допустили ошибку.
  
Решение:
  Исплавил  соотвествующий метод в модуле cxInplaceContainer.pas:
  Было  --> ARemoveFocus := not EditingController.IsEditing
  Стало --> ARemoveFocus := (Key = VK_TAB) and (not EditingController.IsEditing)
  
--> ver. 53
procedure TcxCustomControlController.KeyDown(var Key: Word;
  Shift: TShiftState);
begin
  if not BlockRecordKeyboardHandling then
  begin
    if IsIncSearching then Key := IncSearchKeyDown(Key, Shift);
     FNavigator.KeyDown(Key, Shift);
  end;
  case Key of
    VK_ESCAPE:
      EditingControl.DataController.Cancel;
    VK_RETURN:
      if GetGoToNextCellOnEnter and ((Shift = []) or (Shift = [ssShift])) then
        Navigator.FocusNextCell(Shift = [], Navigator.DownOnEnter, Shift);
    VK_TAB:
      if GetGoToNextCellOnTab and ((Shift = []) or (Shift = [ssShift])) then
      begin
        Navigator.FocusNextCell(Shift = [], Navigator.DownOnTab, Shift);
        Key := 0;
      end;
    VK_PRIOR, VK_NEXT:
      DoNextPage(Key = VK_NEXT, Shift);
  end;
end;

--> ver. 56
procedure TcxCustomControlController.KeyDown(var Key: Word;
  Shift: TShiftState);
var
  ARemoveFocus: Boolean;
begin
  if not BlockRecordKeyboardHandling then
  begin
    if IsIncSearching then Key := IncSearchKeyDown(Key, Shift);
     FNavigator.KeyDown(Key, Shift);
  end;
  case Key of
    VK_ESCAPE:
      EditingControl.DataController.Cancel;
    VK_RETURN, VK_TAB:
      if ((Shift = []) or (Shift = [ssShift])) and (
      ((Key = VK_RETURN) and GetGoToNextCellOnEnter) or
      ((Key = VK_TAB) and GetGoToNextCellOnTab)) then
      begin
        ARemoveFocus := False;
        if Shift + [ssShift] = [ssShift] then
          if Navigator.FocusNextCell(Shift = [], Navigator.DownOnTab, Shift) then
            Key := 0
          else
            ARemoveFocus := not EditingController.IsEditing
        else
          ARemoveFocus := (Key = VK_TAB) and (Shift + [ssShift, ssCtrl] = [ssShift, ssCtrl]);
        if ARemoveFocus and EditingControl.IsFocused then
          PostMessage(GetParentForm(EditingControl).Handle, WM_NEXTDLGCTL, WPARAM(ssShift in Shift), LPARAM(False));
      end;
    VK_PRIOR, VK_NEXT:
      DoNextPage(Key = VK_NEXT, Shift);
  end;
end;

--> my Fix
procedure TcxCustomControlController.KeyDown(var Key: Word;
  Shift: TShiftState);
var
  ARemoveFocus: Boolean;
begin
  if not BlockRecordKeyboardHandling then
  begin
    if IsIncSearching then Key := IncSearchKeyDown(Key, Shift);
     FNavigator.KeyDown(Key, Shift);
  end;
  case Key of
    VK_ESCAPE:
      EditingControl.DataController.Cancel;
    VK_RETURN, VK_TAB:
      if ((Shift = []) or (Shift = [ssShift])) and (
      ((Key = VK_RETURN) and GetGoToNextCellOnEnter) or
      ((Key = VK_TAB) and GetGoToNextCellOnTab)) then
      begin
        ARemoveFocus := False;
        if Shift + [ssShift] = [ssShift] then
          if Navigator.FocusNextCell(Shift = [], Navigator.DownOnTab, Shift) then
            Key := 0
          else
            ARemoveFocus := (Key = VK_TAB) and (not EditingController.IsEditing) //my fix - add (Key = VK_TAB) changed in v56
        else
          ARemoveFocus := (Key = VK_TAB) and (Shift + [ssShift, ssCtrl] = [ssShift, ssCtrl]);
        if ARemoveFocus and EditingControl.IsFocused then
          PostMessage(GetParentForm(EditingControl).Handle, WM_NEXTDLGCTL, WPARAM(ssShift in Shift), LPARAM(False));
      end;
    VK_PRIOR, VK_NEXT:
      DoNextPage(Key = VK_NEXT, Shift);
  end;
end;

2)***************************************************************************************